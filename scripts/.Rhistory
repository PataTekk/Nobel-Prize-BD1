}
physics <- extract_age("physics")
chemistry <- extract_age("chemistry")
economics <- extract_age("economics")
literature <- extract_age("literature")
medicine <- extract_age("medicine")
peace <- extract_age("peace")
p <- plot_ly(y = physics, type = "box") %>%
add_trace(y = chemistry)
p
physics <- extract_age("physics")
physics
extract_age <- function(given_category) {
new_data <- filter(data, category == given_category)
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
if (born_year[i] == 0 || is.na(born_year[i])) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
age <- prize_year - born_year
return(age)
}
physics <- extract_age("physics")
chemistry <- extract_age("chemistry")
economics <- extract_age("economics")
literature <- extract_age("literature")
medicine <- extract_age("medicine")
peace <- extract_age("peace")
p <- plot_ly(y = physics, type = "box") %>%
add_trace(y = chemistry)
p
extract_age <- function(given_category) {
new_data <- filter(data, category == given_category)
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
if (born_year[i] == 0)) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
age <- prize_year - born_year
return(age)
}
extract_age <- function(given_category) {
new_data <- filter(data, category == given_category)
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
if (born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
age <- prize_year - born_year
return(age)
}
physics <- extract_age("physics")
chemistry <- extract_age("chemistry")
new_data <- filter(data, category == physics)
new_data <- filter(data, category == "physics")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
if (born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
age <- prize_year - born_year
age
View(new_data)
born_year
prize_year
new_data <- filter(data, category == "physics")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
born_year
new_data <- filter(data, category == "physics")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
if (born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
i <- i - 1
}
}
age <- prize_year - born_year
age
new_data <- filter(data, category == "physics")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
while (born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
new_data <- filter(data, category == "physics")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
while (is.na(born_year[i]) || born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
new_data <- filter(data, category == "physics")
# Load the libraries required
library(dplyr)
library(plotly)
data <- read.csv("/Users/YixinXu/Desktop/INFO201/Nobel-Prize-BD1/data/laureate.csv",
stringsAsFactors = FALSE)
# Build a box plot for average age by categories
categories <- c("chemistry", "economics", "literature", "medicine", "peace",
"physics")
new_data <- filter(data, category == "physics")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
while (is.na(born_year[i]) || born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
age <- prize_year - born_year
age
extract_age <- function(given_category) {
new_data <- filter(data, category == given_category)
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
for (i in 1:length(born_year)) {
while (is.na(born_year[i]) || born_year[i] == 0) {
born_year <- born_year[-i]
prize_year <- prize_year[-i]
}
}
age <- prize_year - born_year
return(age)
}
physics <- extract_age("physics")
physics <- extract_age("physics")
new_data <- filter(data, category == "physics" &&
born_year != "0000-00-00")
new_data <- filter(data, category == "physics" &
born_year != "0000-00-00")
View(new_data)
new_data <- filter(data, category == "physics" &
born != "0000-00-00")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
age <- prize_year - born_year
extract_age <- function(given_category) {
new_data <- filter(data, category == given_category &
born != "0000-00-00")
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
age <- prize_year - born_year
return(age)
}
physics <- extract_age("physics")
chemistry <- extract_age("chemistry")
economics <- extract_age("economics")
literature <- extract_age("literature")
medicine <- extract_age("medicine")
peace <- extract_age("peace")
p <- plot_ly(y = physics, type = "box") %>%
add_trace(y = chemistry)
p
p <- plot_ly(y = physics, type = "box") %>%
add_trace(y = chemistry) %>%
add_trace(y = economics)
p <- plot_ly(y = physics, type = "box") %>%
add_trace(y = chemistry) %>%
add_trace(y = economics) %>%
add_trace(y = literature) %>%
add_trace(y = medicine) %>%
add_trace(y = peace)
p
boxplot <- plot_ly(y = physics, type = "box", name = "physics") %>%
add_trace(y = chemistry) %>%
add_trace(y = economics) %>%
add_trace(y = literature) %>%
add_trace(y = medicine) %>%
add_trace(y = peace)
born_year <- as.numeric(substr(born_year, 1, 4))
p
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = chemistry, name = "chemitry") %>%
add_trace(y = economics) %>%
add_trace(y = literature) %>%
add_trace(y = medicine) %>%
add_trace(y = peace)
p
boxplot <- plot_ly(y = physics, type = "box", name = "physics") %>%
add_trace(y = chemistry) %>%
add_trace(y = economics) %>%
add_trace(y = literature) %>%
add_trace(y = medicine) %>%
add_trace(y = peace)
boxplot
boxplot <- plot_ly(y = physics, type = "box", name = "physics") %>%
add_boxplot(y = chemistry) %>%
add_boxplot(y = economics) %>%
add_boxplot(y = literature) %>%
add_boxplot(y = medicine) %>%
add_boxplot(y = peace)
boxplot
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics) %>%
add_boxplot(y = chemistry) %>%
add_boxplot(y = economics) %>%
add_boxplot(y = literature) %>%
add_boxplot(y = medicine) %>%
add_boxplot(y = peace)
boxplot
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry) %>%
add_boxplot(y = economics) %>%
add_boxplot(y = literature) %>%
add_boxplot(y = medicine) %>%
add_boxplot(y = peace)
boxplot
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = economics, name = "economics") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace")
boxplot
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = economics, name = "economics") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
boxplot
setwd("~/Desktop/INFO201/Nobel-Prize-BD1/scripts")
# Load the libraries required
library(dplyr)
library(plotly)
data <- read.csv("/Users/YixinXu/Desktop/INFO201/Nobel-Prize-BD1/data/laureate.csv",
stringsAsFactors = FALSE)
# Build a box plot for average age by categories
categories <- c("chemistry", "economics", "literature", "medicine", "peace",
"physics")
extract_age <- function(given_category, given_start, given_end) {
new_data <- filter(data, category == given_category &
born != "0000-00-00" & year >= given_start &
year <= given_end)
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
age <- prize_year - born_year
return(age)
}
physics <- extract_age("physics", 1901, 1910)
chemistry <- extract_age("chemistry", 1901, 1910)
economics <- extract_age("economics", 1901, 1910)
literature <- extract_age("literature", 1901, 1910)
medicine <- extract_age("medicine", 1901, 1910)
peace <- extract_age("peace", 1901, 1910)
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = economics, name = "economics") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
boxplot
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = economics, name = "economics") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
if (length(economics) == 0) {
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
} else {
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = economics, name = "economics") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
}
boxplot
# Build a box plot for average age by categories
build_boxplot <- function (given_start, given_end) {
categories <- c("chemistry", "economics", "literature", "medicine", "peace",
"physics")
extract_age <- function(given_category, given_start, given_end) {
new_data <- filter(data, category == given_category &
born != "0000-00-00" & year >= given_start &
year <= given_end)
born_year <- new_data$born
born_year <- as.numeric(substr(born_year, 1, 4))
prize_year <- as.numeric(new_data$year)
age <- prize_year - born_year
return(age)
}
physics <- extract_age("physics", given_start, given_end)
chemistry <- extract_age("chemistry", given_start, given_end)
economics <- extract_age("economics", given_start, given_end)
literature <- extract_age("literature", given_start, given_end)
medicine <- extract_age("medicine", given_start, given_end)
peace <- extract_age("peace", given_start, given_end)
if (length(economics) == 0) {
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
} else {
boxplot <- plot_ly(type = "box") %>%
add_boxplot(y = physics, name = "physics") %>%
add_boxplot(y = chemistry, name = "chemistry") %>%
add_boxplot(y = economics, name = "economics") %>%
add_boxplot(y = literature, name = "literature") %>%
add_boxplot(y = medicine, name = "medicine") %>%
add_boxplot(y = peace, name = "peace") %>%
layout(title = "Age Distribution by Prize Categories")
}
return(boxplot)
}
build_boxplot(1901, 1910)
build_boxplot(1901, 1980)
library(httr)
library(jsonlite)
library(dplyr)
base_uri <- "http://api.nobelprize.org/v1/"
resource_prize <- "prize.csv"
resource_winner <- "laureate.csv"
prize_dat <- read.csv(paste0(base_uri, resource_prize))
winner_dat <- read.csv(paste0(base_uri, resource_winner))
all_data <- left_join(prize_dat, winner_dat, by = "id")
all_data <- all_data[order(all_data$id),]
deduped.data <- all_data[!duplicated(all_data$id),]
deduped_data <- all_data[!duplicated(all_data$id),]
View(deduped_data)
filtered_data <-  deduped_data %>% select(id, category)
View(deduped_data)
filtered_data <-  deduped_data %>% select(id, category.x)
View(filtered_data)
View(filtered_data)
filtered_data <-  deduped_data %>% select(id, year.x, category.x, firstname.x, surname.x,
gender, motivation.x, share.x, born, bornCountry,
bornCity, died, diedCountry, name, city, country)
View(filtered_data)
View(filtered_data)
View(filtered_data)
View(filtered_data)
col_names <- colnames(filtered_data)
1:ncol(filtered_data)
col_names <- colnames(filtered_data)
for (i in 1:ncol(filtered_data)) {
filtered_data$col_name[i][filtered_data$col_name[i] == ""] <- "Not Available"
}
View(filtered_data)
View(filtered_data)
filtered_data$col_name[1][filtered_data$col_name[1] == ""]
filtered_data$col_name[16][filtered_data$col_name[16] == ""]
filtered_data$col_name[16][filtered_data$col_name[16] == "Null"]
filtered_data$col_name[16][is.na(filtered_data$col_name[16])]
filtered_data$col_name[i]
filtered_data$(col_name[i])
col_name[1]
col_names[1]
filtered_data$(col_name[1])
filtered_data$col_name[1]
filtered_data <- gsub("", "NotAvailable", filtered_data)
filtered_data <-  deduped_data %>% select(id, year.x, category.x, firstname.x, surname.x,
gender, motivation.x, share.x, born, bornCountry,
bornCity, died, diedCountry, name, city, country)
col_names <- colnames(filtered_data)
gsub("", "NotAvailable", filtered_data)
col_names <- colnames(filtered_data)
filtered_data <-  deduped_data %>% select(id, year.x, category.x, firstname.x, surname.x,
gender, motivation.x, share.x, born, bornCountry,
bornCity, died, diedCountry, name, city, country)
col_names <- colnames(filtered_data)
for (i in 1:ncol(filtered_data)) {
filtered_data$col_name[i] <- sub("^$", "Not Available", filtered_data$col_name[i])
}
View(filtered_data)
filtered_data$col_name[1]
filtered_data$col_names[1]
col_names[1]
filtered_data$"id"
name <- col_names[1]
filtered_data$name
colname <- col_names[1]
filtered_data$colname
for (i in 1:ncol(filtered_data)) {
colname <- col_names[i]
filtered_data[, colname] <- sub("^$", "Not Available", filtered_data$col_name[i])
}
View(filtered_data)
filtered_data[, colname]
filtered_data <-  deduped_data %>% select(id, year.x, category.x, firstname.x, surname.x,
gender, motivation.x, share.x, born, bornCountry,
bornCity, died, diedCountry, name, city, country)
filtered_data[, colname]
filtered_data <-  deduped_data %>% select(id, year.x, category.x, firstname.x, surname.x,
gender, motivation.x, share.x, born, bornCountry,
bornCity, died, diedCountry, name, city, country)
col_names <- colnames(filtered_data)
for (i in 1:ncol(filtered_data)) {
colname <- col_names[i]
filtered_data[, colname] <- sub("^$", "Not Available", filtered_data[, colname])
}
View(filtered_data)
build_table <- function(dat, input) {
filtered <- Reduce("|", dat == input)
}
build_table(filtered_data, 2)
build_table <- function(dat, input) {
filtered <- Reduce("|", dat == input)
filtered
}
build_table(filtered_data, 2)
build_table <- function(dat, input) {
filtered <- which(dat == input, arr.ind=TRUE)
filtered
}
build_table(filtered_data, 2)
dat <- build_table(filtered_data, 2)
View(dat)
dat <- build_table(filtered_data, "Pierre")
location <- build_table(filtered_data, "Pierre")
View(dat)
location <- build_table(filtered_data, "3")
location <- location[!duplicated(location$row),]
location <- location[!duplicated(location[,1]),]
location <- build_table(filtered_data, "3")
location <- location[!duplicated(location[,1]),]
location <- data.frame(location)
View(location)
location <- location[!duplicated(location$row),]
View(location)
location <- build_table(filtered_data, "3")
location <- data.frame(location)
location <- location[!duplicated(location$row),]
location <- build_table(filtered_data, "2")
location <- data.frame(location)
location <- location[!duplicated(location$row),]
View(location)
build_table <- function(dat, input) {
filtered <- data.frame(which(dat == input, arr.ind=TRUE))
location <- filtered[!duplicated(filtered$row),]
location
}
location <- build_table(filtered_data, "2")
build_table <- function(dat, input) {
filtered <- data.frame(which(dat == input, arr.ind=TRUE))
location <- filtered[!duplicated(filtered$row),]
location
}
location <- build_table(filtered_data, "3")
View(location)
View(location)
build_table <- function(dat, input) {
filtered <- data.frame(which(dat == input, arr.ind=TRUE))
location <- filtered[!duplicated(filtered$row),]
result <- dat[location$row, ]
}
location <- build_table(filtered_data, "3")
View(location)
build_table <- function(dat, input) {
filtered <- data.frame(which(dat == input, arr.ind=TRUE))
location <- filtered[!duplicated(filtered$row),]
result <- dat[location$row, ] %>%
return()
}
location <- build_table(filtered_data, "4")
View(location)
location <- build_table(filtered_data, "France")
View(location)
View(location)
